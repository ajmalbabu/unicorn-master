---
server:
  context-path: /unicorn-api
management:
  context-path: /actuator
security:
  basic:
    enabled: true
  user:
    name: admin
    password: unicorn_admin
global:
  # This is false by default, system ahould accept control mesages to shutdown itself. (not implmented).
  shutDownHook: false
spring:
  output:
    ansi:
      enabled: ALWAYS
akka:
  actor:
    system.name: UnicornActorSystem
    # Whether to enable remoting capabilty to actors
    remote:
      enable: false
      bind:
        port: 8995
        host: localhost
  config: unicorn.akka.conf
redis:
  database: 0
  minIdleConnections: 1
  maxIdleConnections: 5
  maxTotalConnections: 10
  host: 127.0.0.1
  port: 8080
  timeout: 10000
cassandra:
  keySpace: cep
kafka:
  flight.event:
    topic: flightEventTopic
    partition: 0
    pollIntervalMs: 100
    producerConfig:
      acks: all
      retries: 0
      # This property controls how much bytes the sender would wait to batch up the content before publishing to Kafka.
      batch.size: 10
      linger.ms: 1
      key.serializer: org.apache.kafka.common.serialization.StringSerializer
      value.serializer: org.apache.kafka.common.serialization.StringSerializer
    consumerConfig:
      group.id: group0
      # Set this property for auto commit to happen.
      enable.auto.commit: true
      # Auto commit interval is an important property, kafka would commit offset at this interval.
      auto.commit.interval.ms: 101
      # This is how to control number of records being read in each poll
      max.partition.fetch.bytes: 2000
      heartbeat.interval.ms: 3000
      session.timeout.ms: 6000
      key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value.deserializer: org.apache.kafka.common.serialization.StringDeserializer

